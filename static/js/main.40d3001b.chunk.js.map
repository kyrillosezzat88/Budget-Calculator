{"version":3,"sources":["Context/CalcContext.js","Components/BudgetForm.js","Components/BudgetList.js","Components/TotalBudget.js","App.js","serviceWorker.js","index.js"],"names":["CalcContext","createContext","CalcContextProvider","props","useState","items","setitem","charge","setCharge","Amount","setAmount","CHitem","setCHitem","TotalAmount","SetTotal","FEdit","id","item","find","length","Charge","Edit","useEffect","Total","value","parseInt","Provider","HandelAmount","e","target","HandelCharge","HandelSubmit","preventDefault","uuid","DeleteItem","filtedData","filter","EditItem","children","CalcForm","useContext","onSubmit","className","htmlFor","required","type","placeholder","onChange","BudgetList","map","key","onClick","defaultValue","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40d3001b.chunk.js","sourcesContent":["import React , {createContext,useState,useEffect} from 'react'\r\nimport uuid from 'uuid/v1';\r\nexport const CalcContext = createContext();\r\n\r\nconst CalcContextProvider = (props) =>{\r\n    const [items , setitem] = useState([]);\r\n    const [charge , setCharge] = useState('')\r\n    const [Amount , setAmount] = useState('')\r\n    const [CHitem , setCHitem] = useState([]);\r\n    const [TotalAmount , SetTotal] = useState('');\r\n    \r\n    const HandelCharge = (e) =>{\r\n        setCharge(e.target.value);\r\n    }\r\n    const HandelAmount = (e) =>{\r\n        setAmount(e.target.value)\r\n    }\r\n    const HandelSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setitem([...items , {id:uuid() , Charge:charge , Amount:Amount , Edit:false}]);\r\n        setCharge('');\r\n        setAmount('');\r\n    }\r\n    const DeleteItem = (id)=>{\r\n        const filtedData = items.filter(item=> item.id !== id);\r\n        setitem(filtedData);\r\n    }\r\n\r\n    const EditItem = (id) =>{\r\n        let item = items.find(item => item.id === id);\r\n        item.Edit = true;\r\n        setCHitem([...CHitem , item]);\r\n    }\r\n    const FEdit = (id) =>{\r\n        let item = items.find(item => item.id === id);\r\n        charge.length > 0 ? item.Charge = charge :  setCharge('')\r\n        Amount.length > 0 ? item.Amount = Amount : setAmount('')\r\n        item.Edit = false;\r\n        setCharge('')\r\n        setAmount('')\r\n        setCHitem([]);\r\n    }\r\n    //Function to get Total Amounts \r\n    useEffect(()=>{\r\n        var Total = 0;\r\n        for(const value of items){\r\n            Total += parseInt(value.Amount);\r\n        }\r\n        SetTotal(Total);\r\n    },[ items , FEdit]);\r\n\r\n    return(\r\n        <CalcContext.Provider  value={{items , HandelAmount,HandelCharge , HandelSubmit ,DeleteItem,EditItem,FEdit,TotalAmount , charge , Amount}}>\r\n            {props.children}\r\n        </CalcContext.Provider>\r\n    )\r\n}\r\nexport default CalcContextProvider;","import React , {useContext} from 'react'\r\nimport { CalcContext } from '../Context/CalcContext';\r\n\r\nconst CalcForm = () => {\r\n    const {HandelCharge , HandelAmount ,HandelSubmit , charge , Amount} = useContext(CalcContext);\r\n    return(\r\n        <form onSubmit={HandelSubmit}>\r\n            <div className='form-group d-inline-block'>\r\n                <label htmlFor='Charge' className='d-block'>Charge:</label>\r\n                <input value={charge} required id='Charge' type='text' placeholder='eg-Name' onChange={HandelCharge} />\r\n            </div>\r\n            <div className='form-group  d-inline-block '>\r\n                <label htmlFor='Amount' className='d-block' >Amount:</label>\r\n                <input value={Amount} required id='Amount' type='number'  placeholder='eg-100' onChange={HandelAmount} />\r\n            </div>\r\n            <div className='d-flex justify-content-center'>\r\n                <input type='submit' value='Submit' className='d-block' />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default CalcForm;","import React, {useContext} from 'react'\r\nimport { CalcContext } from '../Context/CalcContext';\r\nconst BudgetList = () =>{\r\n    const {items , DeleteItem , EditItem,HandelCharge,HandelAmount,FEdit } = useContext(CalcContext);\r\n    return(\r\n        items.length ? (\r\n            items.map(item => {\r\n                return(\r\n                    item.Edit === false ? (\r\n                        <div key={item.id} className='budgetlist d-flex justify-content-between'>\r\n                            <span>{item.Charge}</span>\r\n                            <span>{item.Amount}$</span>\r\n                            <div><i onClick={()=>EditItem(item.id)} className=\"fas fa-pen\"></i><i className=\"text-danger fas fa-trash\" onClick={()=>DeleteItem(item.id)}></i></div>\r\n                        </div>\r\n                    ) : (\r\n                        <div key={item.id} className='budgetlist d-flex justify-content-between'>\r\n                            <input defaultValue={item.Charge} onChange={HandelCharge} />\r\n                            <input  defaultValue={item.Amount} onChange={HandelAmount} />\r\n                            <div><i onClick={()=>FEdit(item.id)} className=\"fas fa-check\"></i></div>\r\n                        </div>\r\n                    )\r\n                    \r\n                )\r\n            })\r\n        ) : (\r\n            <h2 className='noitem text-danger text-Capitalize text-center'>There is No items Yet!!</h2>\r\n        )\r\n    )\r\n   \r\n}\r\nexport default BudgetList;","import React , {useContext} from 'react'\r\nimport { CalcContext } from '../Context/CalcContext';\r\nconst Total = () => {\r\n    const {TotalAmount} = useContext(CalcContext)\r\n    return(\r\n        <div className='total d-flex justify-content-center'>\r\n            <h4>Total Spending : {TotalAmount}$</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default Total;","import React , {Component} from 'react';\nimport './Styles/App.css'\nimport CalcForm from './Components/BudgetForm';\nimport CalcContextProvider from './Context/CalcContext';\nimport BudgetList from './Components/BudgetList';\nimport Total from './Components/TotalBudget';\n\nclass App extends Component{\n  render() {\n    return (\n      <div className=\"App d-flex justify-content-center align-items-center flex-column\">\n        <h1 className='text-center'>Budget Calculator</h1>\n        <div className='innerApp'>\n        <CalcContextProvider>\n          <CalcForm/>\n          <BudgetList/>\n          <Total/>\n        </CalcContextProvider>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}